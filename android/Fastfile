# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Promote a Beta Build to the Release Channel"
  lane :release do
    tag = ENV['TRAVIS_TAG'] || ''

    if tag =~ /.*-ios/
      next
    end

    upload_to_play_store(track: 'internal',
                         track_promote_to: 'production',
                         json_key: './fastlane/GooglePlayAPI.json',
                         skip_upload_metadata: true,
                         skip_upload_screenshots: true,
                         skip_upload_images: true)

    cru_notify_users(message: "#{ENV['CRU_PROJECT_NAME']} Android Beta Build promoted to Play Store Release Channel. DEVELOPERS: Remember to bump version number for the next build!")
  end

  desc "Submit a new Beta Build to the Play Store Beta Channel"
  lane :beta do
    cru_build_app

    upload_to_play_store(track: 'internal',
                         json_key: './fastlane/GooglePlayAPI.json',
                         mapping: ENV['CRU_MAPPING_FILE'],
                         skip_upload_metadata: true,
                         skip_upload_screenshots: true,
                         skip_upload_images: true)

    cru_notify_users(message: "#{ENV['CRU_PROJECT_NAME']} Android Beta Build released to Play Store Internal Test Channel.")
  end

  lane :cru_build_app do
    keystore_filename = File.expand_path(ENV['GOOGLE_PLAY_UPLOAD_KEYSTORE'], File.expand_path('..'))
    task = ENV['CRU_GRADLE_TASK'] || 'clean assembleRelease'

    gradle(task: task,
           print_command: false,
           properties: {
               'android.injected.signing.store.file': keystore_filename,
               'android.injected.signing.store.password': ENV['GOOGLE_PLAY_UPLOAD_KEY_PASSWORD'],
               'android.injected.signing.key.alias': ENV['GOOGLE_PLAY_UPLOAD_KEY_ALIAS'],
               'android.injected.signing.key.password': ENV['GOOGLE_PLAY_UPLOAD_KEY_PASSWORD'],
           })
  end

  lane :cru_notify_users do |options|
    if ENV["SLACK_URL"]
      slack(
        slack_url: ENV["SLACK_URL"],
        fail_on_error: false,
        message: options[:message]
      )
    end
  end
end
